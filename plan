#!/usr/bin/env bash

#
# esce dallo script
#
function die()
{
    local messages=( "${@}" )
    local message

    for message in "${messages[@]}"
    do
        echo "FATAL | ${message}"
    done
    echo "FATAL | Termino programma"
    # echo "FATAL | per consultare log aprire: ${LOGFILE}"
    # echo "FATAL | * * * * PER ASSISTENZA MANDARE file '$(basename ${LOGFILE})' * * * *"
    exit 1
}

SCRIPTPATH="$(dirname "${0}")"              # percorso script == percorso dati
echo SCRIPTPATH=$SCRIPTPATH
CONFIGPATH="${SCRIPTPATH}"                  # percorso dati == percorso script
INCLUDEPATH="${SCRIPTPATH}"                 # percorso dati == percorso script
#############################################################################
#
# CONFIGURAZIONE AMBIENTE
#
#############################################################################
CONFIG="${CONFIGPATH}/config.include"
. "${CONFIG}" || die "impossibile caricare ${CONFIG}"
#############################################################################
#
# FUNZIONI
#
#############################################################################
INCLUDE="${INCLUDEPATH}/functions.include"
. "${INCLUDE}" || die "impossibile caricare ${INCLUDE}"

function main()
{
    info main

    # info "${0}: param num ${#}"
    # info "${0}: params ${@}"

    # get_options "${@}"
    . ${INCLUDEPATH}/options.include

    # info "${0}: param num ${#}"
    # info "${0}: params ${@}"

    INTERFACE='UNKNOWN INTERFACE'

    if [ ${#} -eq 0 ]
    then
        status
        exit
    else
        COMMAND=${1,,}
        case ${COMMAND} in
            status)
                status
                exit
            ;;
            wifi)
                INTERFACE=wifi
            ;;
            eth)
                INTERFACE=eth
            ;;
            help)
                get_help
                exit
            ;;
            *)
                get_help
                die "errore nei parametri: ${@}"
            ;;
        esac
    fi
    info INTERFACE=${INTERFACE}

    [ ${#} -ge 2 ] || { get_help;die "missing parameter for ${INTERFACE}"; }

    SUBCOMMAND=${2,,}
    case ${SUBCOMMAND} in
        status)
            ${INTERFACE}_status
        ;;
        on)
            info turn on ${INTERFACE}
        ;;
        off)
            if [ ${INTERFACE} = wifi ]
            then
                other_interface=eth
            else
                other_interface=wifi
            fi

            if ${other_interface}_isactive
            then
                info turn off ${INTERFACE}
            else
                error "${other_interface} is not active"
            fi
        ;;
        *)
            die "unknown subcommand: ${SUBCOMMAND}"
        ;;
    esac
}

main "${@}"
