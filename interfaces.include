#!/usr/bin/env bash

NETPLAN_PATH=/etc/netplan

ETH_ENABLED_FILENAME=00-ethernet.yaml
ETH_ENABLED="${NETPLAN_PATH}/${ETH_ENABLED_FILENAME}"

WIFI_ENABLED_FILENAME=01-wifi.yaml
WIFI_ENABLED="${NETPLAN_PATH}/${WIFI_ENABLED_FILENAME}"

ETH_DISABLED_FILENAME=00-ethernet.off
ETH_DISABLED="${NETPLAN_PATH}/${ETH_DISABLED_FILENAME}"

WIFI_DISABLED_FILENAME=01-wifi.off
WIFI_DISABLED="${NETPLAN_PATH}/${WIFI_DISABLED_FILENAME}"

function get_status() {	local config=${1};[ -f ${config} ] && { echo "ACTIVATED"; } || { echo "DEACTIVATED"; }; }

function wifi_isactive() { [ $(get_status ${WIFI_ENABLED}) = ACTIVATED ] && true || false; }
function eth_isactive()  { [ $(get_status ${ETH_ENABLED})  = ACTIVATED ] && true || false; }

function wifi_status() { info "wifi is $(get_status ${WIFI_ENABLED}) in netplan"; }
function eth_status() { info "eth is $(get_status ${ETH_ENABLED}) in netplan"; }

function status()
{
	info "NETPLAN connection status:"
	eth_status
	wifi_status
}

function check_other_interface 
{
	local _interface=${1}
	local other_interface

	if [ ${_interface} = wifi ]
	then
		other_interface=eth
	elif [ ${_interface} = eth ]
	then
		other_interface=wifi
	else
		die "unknown interface: ${_interface}"
	fi

	info "checking if ${other_interface} is on"
	
	# at least one interface must be set active
	if ${other_interface}_isactive
	then
		true
	else
		error "${other_interface} is not active"
		false
	fi
}

function enable_interface()
{
	local _interface=${1^^}
	local _v_enabled _enabled

	debug _interface=${_interface}

	case ${_interface} in
		WIFI|ETH)
			_v_enabled=${_interface}_ENABLED
			_enabled=${!_v_enabled}
			# debug _enabled=${_enabled}

			_v_disabled=${_interface}_DISABLED
			_disabled=${!_v_disabled}
			# debug _disabled=${_disabled}

			if [ -f ${_enabled} ]
			then 
				warn "interface ${_interface,,} is already enabled"
			elif [ -f ${_disabled} ]
			then
				# debug sudo mv ${_disabled} ${_enabled}
				sudo mv ${_disabled} ${_enabled}
				# debug sudo netplan apply
				sudo netplan apply
			fi
		;;
		*)
			die "unknown interface ${_interface}"
		;;
	esac
}


function disable_interface()
{
	local _interface=${1^^}
	local _v_enabled _enabled

	debug _interface=${_interface}

	case ${_interface} in
		WIFI|ETH)
			_v_enabled=${_interface}_ENABLED
			_enabled=${!_v_enabled}
			# debug _enabled=${_enabled}

			_v_disabled=${_interface}_DISABLED
			_disabled=${!_v_disabled}
			# debug _disabled=${_disabled}

			if [ -f ${_disabled} ]
			then 
				warn "interface ${_interface,,} is already disabled"
			elif [ -f ${_enabled} ]
			then
				# debug sudo mv ${_enabled} ${_disabled} 
				sudo mv ${_enabled} ${_disabled} 
				# debug sudo netplan apply
				sudo netplan apply
			fi
		;;
		*)
			die "unknown interface ${_interface}"
		;;
	esac
}
